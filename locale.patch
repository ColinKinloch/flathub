diff --git a/src/celastro/date.cpp b/src/celastro/date.cpp
index 770ff5c8..27b7d2ce 100644
--- a/src/celastro/date.cpp
+++ b/src/celastro/date.cpp
@@ -94,7 +94,7 @@ private:
 
 MonthAbbreviations::MonthAbbreviations()
 {
-    auto loc = std::locale("");
+    auto loc = std::locale();
     for (int i = 0; i < 12; ++i)
     {
         std::tm tm;
@@ -213,11 +213,11 @@ Date::toString(Format format) const
     switch(format)
     {
     case Locale:
-        return fmt::format(std::locale(""), "{:%c}"sv, cal_time);
+        return fmt::format(std::locale(), "{:%c}"sv, cal_time);
     case TZName:
-        return fmt::format(std::locale(""), "{:%Y %b %d %H:%M:%S %Z}"sv, cal_time);
+        return fmt::format(std::locale(), "{:%Y %b %d %H:%M:%S %Z}"sv, cal_time);
     default:
-        return fmt::format(std::locale(""), "{:%Y %b %d %H:%M:%S %z}"sv, cal_time);
+        return fmt::format(std::locale(), "{:%Y %b %d %H:%M:%S %z}"sv, cal_time);
     }
 #else
     switch(format)
diff --git a/src/celestia/celestiacore.cpp b/src/celestia/celestiacore.cpp
index f99037a8..6bfc3a8c 100644
--- a/src/celestia/celestiacore.cpp
+++ b/src/celestia/celestiacore.cpp
@@ -202,6 +202,13 @@ CelestiaCore::CelestiaCore() :
 
     CreateLogger();
 
+    if (setlocale(LC_ALL, "")) {
+        std::locale::global(std::locale(""));
+    } else {
+        GetLogger()->error(_("Could not find locale, falling back to classic.\n"));
+    }
+    loc = std::locale();
+
     std::fill(std::begin(keysPressed), std::end(keysPressed), false);
     std::fill(std::begin(shiftKeysPressed), std::end(shiftKeysPressed), false);
     std::fill(std::begin(joyButtonsPressed), std::end(joyButtonsPressed), false);
diff --git a/src/celestia/celestiacore.h b/src/celestia/celestiacore.h
index e0a658da..8abda819 100644
--- a/src/celestia/celestiacore.h
+++ b/src/celestia/celestiacore.h
@@ -426,7 +426,7 @@ private:
     Simulation* sim{ nullptr };
     Renderer* renderer{ nullptr };
 
-    std::locale loc{ "" };
+    std::locale loc;
 
     celestia::WindowMetrics metrics;
     std::unique_ptr<celestia::Hud> hud;
